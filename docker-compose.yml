services:

  db:
    image: postgres:14.1-alpine
    restart: always
    env_file:
      - backend/web.env
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data



  backend:
    build:
      context: ./backend
    command: bash -c "./manage.py collectstatic --noinput && gunicorn -b 0.0.0.0:8000 core.wsgi:application --log-level debug"
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - backend/web.env
    volumes:
      - ./backend/:/backend
      - static_volume:/backend/static
      - media_volume:/backend/media



  frontend:
    build:
      context: ./frontend
    command: serve -s /frontend/build -l 3000
    volumes:
      - react_build:/react/build
    ports:
      - '3000:3000'


  nginx:
    build:
      dockerfile: ./Dockerfile
      context: ./nginx
    ports:
      - '80:80'
    volumes:
      - static_volume:/backend/static
      - media_volume:/backend/media
    depends_on:
      - backend
      - frontend
      - db


volumes:
  db:
    driver: local
  react_build:
  static_volume:
    driver: local  # Используем именованный том для статических файлов
  media_volume:
    driver: local  # Используем именованный том для медиа-файлов


